{"remainingRequest":"C:\\Users\\linyu\\Desktop\\前后分离课程管理系统1\\course-ui\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\linyu\\Desktop\\前后分离课程管理系统1\\course-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\linyu\\Desktop\\前后分离课程管理系统1\\course-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\linyu\\Desktop\\前后分离课程管理系统1\\course-ui\\src\\views\\admin\\AdminCourse.vue?vue&type=template&id=0e4e95c0&scoped=true&","dependencies":[{"path":"C:\\Users\\linyu\\Desktop\\前后分离课程管理系统1\\course-ui\\src\\views\\admin\\AdminCourse.vue","mtime":1622127741557},{"path":"C:\\Users\\linyu\\Desktop\\前后分离课程管理系统1\\course-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\linyu\\Desktop\\前后分离课程管理系统1\\course-ui\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\linyu\\Desktop\\前后分离课程管理系统1\\course-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\linyu\\Desktop\\前后分离课程管理系统1\\course-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}